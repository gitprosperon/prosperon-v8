# Generated by Django 4.1.4 on 2023-02-01 02:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnytimeDecision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('name_id', models.CharField(blank=True, max_length=500, null=True)),
                ('step2_path', models.CharField(blank=True, max_length=500, null=True)),
                ('video_link', models.CharField(blank=True, max_length=500, null=True)),
                ('decision_id', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('learning_objectives', models.TextField(blank=True, max_length=500, null=True)),
                ('vocab', models.TextField(blank=True, max_length=500, null=True)),
                ('yearly_cost', models.IntegerField(blank=True, null=True)),
                ('monthly_cost', models.IntegerField(blank=True, null=True)),
                ('next_btn_link', models.CharField(blank=True, max_length=500, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='anytimeImages/')),
            ],
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('sqFeet', models.CharField(blank=True, max_length=500, null=True)),
                ('yearly_cost', models.IntegerField(blank=True, null=True)),
                ('general_information', models.TextField(blank=True, max_length=500, null=True)),
                ('bedrooms', models.CharField(blank=True, max_length=500, null=True)),
                ('bathrooms', models.CharField(blank=True, max_length=500, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='apartmentImages/')),
                ('initial_cost', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=400, null=True)),
                ('company', models.CharField(blank=True, max_length=400, null=True)),
                ('job_id', models.CharField(blank=True, max_length=400, null=True)),
                ('location', models.CharField(blank=True, max_length=400, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='jobimages/')),
                ('salary_range', models.CharField(blank=True, choices=[('$>10,000', '$>10,000'), ('$10,001-$25,000', '$10,001-$25,000'), ('$25,001-$40,000', '$25,001-$40,000'), ('$40,001-$55,000', '$40,001-$55,000'), ('$55,001-$70,000', '$55,001-$70,000'), ('$70,001-$85,000', '$70,001-$85,000'), ('$85,001-$100,000', '$85,001-$100,000'), ('$100,001-$120,000', '$100,001-$120,000'), ('$120,001-$140,000', '$120,001-$140,000'), ('$140,001-$160,000', '$140,001-$160,000'), ('$160,000+', '$160,000+')], max_length=400)),
                ('job_type', models.CharField(blank=True, choices=[('On-Site', 'On-Site'), ('Hybrid', 'Hybrid'), ('Remote', 'Remote')], max_length=400, null=True)),
                ('job_hours', models.CharField(blank=True, choices=[('Full Time', 'Full Time'), ('Part Time', 'Part Time')], max_length=400, null=True)),
                ('pay_structure', models.CharField(blank=True, choices=[('Salary + Bonus', 'Salary + Bonus'), ('Salary + Stock Options', 'Salary + Stock Options'), ('Salary', 'Salary'), ('Hourly Wage + Overtime', 'Hourly Wage + Overtime'), ('Salary + Commission', 'Salary + Commission'), ('Commission Only', 'Commission Only'), ('Fixed Contract', 'Fixed Contract')], max_length=100, null=True)),
                ('company_401k', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not Specified', 'Not Specified')], max_length=100, null=True)),
                ('health', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not Specified', 'Not Specified')], max_length=100, null=True)),
                ('dental', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not Specified', 'Not Specified')], max_length=100, null=True)),
                ('vision', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not Specified', 'Not Specified')], max_length=100, null=True)),
                ('pto', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not Specified', 'Not Specified')], max_length=100, null=True)),
                ('student_loan_assist', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not Specified', 'Not Specified')], max_length=100, null=True)),
                ('relocation', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No'), ('Not Specified', 'Not Specified')], max_length=100, null=True)),
                ('company_requirements', models.TextField(blank=True, max_length=10000, null=True)),
                ('company_qualifications', models.TextField(blank=True, max_length=10000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=500, null=True)),
                ('average_rent', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('major_title', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UniversityModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_title', models.CharField(blank=True, max_length=500, null=True)),
                ('module_id', models.CharField(blank=True, max_length=500, null=True)),
                ('start_date', models.CharField(blank=True, max_length=500, null=True)),
                ('end_date', models.CharField(blank=True, max_length=500, null=True)),
                ('next_life_event', models.JSONField(blank=True, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='moduleImages/')),
                ('whats_happened', models.TextField(blank=True, max_length=5000, null=True)),
                ('unlocked_decisions', models.CharField(blank=True, max_length=50000, null=True)),
                ('points', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=400, null=True)),
                ('progress', models.CharField(blank=True, max_length=400, null=True)),
                ('video_link', models.CharField(blank=True, max_length=400, null=True)),
                ('back_button', models.CharField(blank=True, max_length=400, null=True)),
                ('next_button', models.CharField(blank=True, max_length=400, null=True)),
                ('video_id', models.CharField(blank=True, max_length=400, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('page_type', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_email', models.CharField(blank=True, max_length=200, null=True)),
                ('user_id_number', models.CharField(blank=True, max_length=250, null=True)),
                ('school', models.CharField(blank=True, max_length=250, null=True)),
                ('class_code', models.CharField(blank=True, max_length=250, null=True)),
                ('course_progress', models.CharField(blank=True, max_length=200, null=True)),
                ('first_name', models.CharField(blank=True, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, max_length=20, null=True)),
                ('age', models.CharField(blank=True, max_length=20, null=True)),
                ('live_with_parents', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Female', 'Female'), ('Male', 'Male'), ('Not Specified', 'Not Specified')], max_length=20, null=True)),
                ('ethnicity', models.CharField(blank=True, choices=[('white', 'White'), ('black', 'Black or African American'), ('latin', 'Hispanic or Latino'), ('native american', 'American Indian or Alaska Native'), ('asian', 'Asian'), ('islander or hawaiian', 'Native Hawaiian or Other Pacific Islander'), ('other', 'Multiracial/Other')], max_length=20, null=True)),
                ('jobs_applied', models.CharField(blank=True, max_length=100, null=True)),
                ('accepted_job', models.CharField(blank=True, max_length=100, null=True)),
                ('life_path', models.JSONField(blank=True, null=True)),
                ('yearly_salary', models.IntegerField(blank=True, null=True)),
                ('unlocked_anytime_decisions', models.CharField(blank=True, max_length=100, null=True)),
                ('last_points_added', models.IntegerField(blank=True, null=True)),
                ('total_points', models.IntegerField(blank=True, null=True)),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Student.job')),
                ('major', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Student.major')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ModuleSummarie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users_id', models.CharField(blank=True, max_length=100, null=True)),
                ('module_url', models.CharField(blank=True, max_length=500, null=True)),
                ('what_happened', models.CharField(blank=True, max_length=500, null=True)),
                ('unlocked_decisions', models.CharField(blank=True, max_length=5000, null=True)),
                ('points_earned', models.CharField(blank=True, max_length=500, null=True)),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Student.universitymodule')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='job',
            name='job_city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Student.location'),
        ),
        migrations.CreateModel(
            name='BudgetItemsUniversity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(blank=True, choices=[('Food and Drink', 'Food and Drink'), ('Transportation', 'Transportation'), ('Shops', 'Shops'), ('Transfer', 'Transfer'), ('Service', 'Service'), ('Payment', 'Payment'), ('Income', 'Income')], max_length=200, null=True)),
                ('total_per_month', models.IntegerField(blank=True, null=True)),
                ('users_id', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
